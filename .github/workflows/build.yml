name: Build using Github Actions
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'README.md'
      - '.github/workflows/build.yml'
concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true
jobs:
  prepare-kernels:
    name: Prepare Kernels
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.kernels.outputs.matrix }}
    steps:
      - name: Install dependencies
        run: |
          yes | DEBIAN_FRONTEND=noninteractive sudo apt update
          #yes | DEBIAN_FRONTEND=noninteractive sudo apt dist-upgrade
          yes | DEBIAN_FRONTEND=noninteractive sudo apt install gcc-12 g++-12 git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison sbsigntool
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 110 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Download kernels and apply patches
        run: ./prepare_kernels.sh
      - name: Define kernels matrix
        id: kernels
        run: echo "matrix=$(echo [\"$(ls -d ./kernels/*  | cut -f3 -d'/' | sed -Ez '$ s/\n+$//' | sed -z 's#\n#","#g')\"])" >> $GITHUB_OUTPUT
      - name: Compress kernels source files
        run: tar zcf /tmp/kernels-source.tar.gz kernels
      - name: Upload kernels source
        uses: actions/upload-artifact@v4
        with:
          name: kernels-source
          path: /tmp/kernels-source.tar.gz
          if-no-files-found: error
  build-kernels:
    name: Build Kernels
    needs: prepare-kernels
    runs-on: ubuntu-24.04
    strategy:
        matrix:
            kernel: ${{ fromJson(needs.prepare-kernels.outputs.matrix) }}
    steps:
      - name: Install dependencies
        run: |
          yes | DEBIAN_FRONTEND=noninteractive sudo apt update
          #yes | DEBIAN_FRONTEND=noninteractive sudo apt dist-upgrade
          yes | DEBIAN_FRONTEND=noninteractive sudo apt install gcc-12 g++-12 git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison sbsigntool
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 110 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Download kernels source
        uses: actions/download-artifact@v4
        with:
          name: kernels-source
          path: /tmp
      - name: Extract kernels source files
        run: |
          tar -zxf /tmp/kernels-source.tar.gz
          rm -f /tmp/kernels-source.tar.gz
      - name: Install Secure Boot certificate
        env:
          KERNEL_PRIV: ${{ secrets.KERNEL_PRIV }}
          KERNEL_PEM: ${{ secrets.KERNEL_PEM }}
        run: |
          sudo ln -s $RUNNER_TEMP /persist
          mkdir /persist/keys
          echo "$KERNEL_PRIV" | base64 -d > /persist/keys/MOK.priv
          echo "$KERNEL_PEM" | base64 -d > /persist/keys/MOK.pem
      - name: Build kernels
        run: ./build_kernels.sh ${{ matrix.kernel }}
      - name: Clear keys
        run: rm -r /persist/keys
      - name: Compress built kernel
        run: tar zcf /tmp/built-kernel-${{ matrix.kernel }}.tar.gz kernels/${{ matrix.kernel }}
      - name: Upload kernels source
        uses: actions/upload-artifact@v4
        with:
          name: built-kernel-${{ matrix.kernel }}
          path: /tmp/built-kernel-${{ matrix.kernel }}.tar.gz
          if-no-files-found: error
  package-kernel:
    name: Package kernel
    needs:
        - prepare-kernels
        - build-kernels
    runs-on: ubuntu-24.04
    strategy:
        matrix:
            kernel: ${{ fromJson(needs.prepare-kernels.outputs.matrix) }}
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Display disk space
        run: |
          echo "Free space:"
          df -h
      - name: Free some disk space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt clean
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Download built kernels
        uses: actions/download-artifact@v4
        with:
          name: built-kernel-${{ matrix.kernel }}
          path: /tmp
      - name: Copy built kernels
        run: |
          ls -l /tmp/built-kernel-*
          tar zxf /tmp/built-kernel-*.tar.gz
          rm -f /tmp/built-kernel-*.tar.gz
      - name: package kernel
        run: |
          sudo bash package_kernels.sh
          ls -l out
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ matrix.kernel }}-package
          path: out/kernel-*.tar.gz
          if-no-files-found: error
